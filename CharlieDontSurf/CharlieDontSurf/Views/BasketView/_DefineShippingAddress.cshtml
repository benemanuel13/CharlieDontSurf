@model CharlieDontSurf.Models.Shipping.ShippingAddressViewModel
@{
    ViewBag.Title = "Shipping Model";
}

<h2 class="subheading">New Shipping Address</h2>

@using (Html.BeginForm("Register", "Account", FormMethod.Post, new { @Id="AddressForm", @class = "form-horizontal subheading", role = "form", onsubmit="sendAddress(); return false;" }))
{
        @Html.AntiForgeryToken()
        <h4>Define a new Shipping Address.</h4>
        <hr />
        if (Model == null)
        {
            @Html.Hidden("AddressId", 0);
        }
        else
        {
            @Html.Hidden("AddressId", Model.Id);
        }
        @Html.ValidationSummary("", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(m => m.Recipient, new { @class = "col-md-4 control-label" })
            <div class="col-md-8">
                @Html.TextBoxFor(m => m.Recipient, new { @class = "form-control" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.AddressLine1, new { @class = "col-md-4 control-label" })
            <div class="col-md-8">
                @Html.TextBoxFor(m => m.AddressLine1, new { @class = "form-control" })
            </div>
        </div>
        <div class="form-group">
            <label class="col-md-4">
                &nbsp;
            </label>
            <div class="col-md-8">
                @Html.TextBoxFor(m => m.AddressLine2, new { @class = "form-control" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.City, new { @class = "col-md-4 control-label" })
            <div class="col-md-8">
                @Html.TextBoxFor(m => m.City, new { @class = "form-control" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.County, new { @class = "col-md-4 control-label" })
            <div class="col-md-8">
                @Html.TextBoxFor(m => m.County, new { @class = "form-control" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.Postcode, new { @class = "col-md-4 control-label" })
            <div class="col-md-8">
                @Html.TextBoxFor(m => m.Postcode, new { @class = "form-control" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.Country, new { @class = "col-md-4 control-label" })
            <div class="col-md-8">
                @Html.TextBoxFor(m => m.Country, new { @class = "form-control" })
            </div>
        </div>
        
        <div class="form-group">
            <div class="text-right col-md-10">
                <span onclick="cancelEdit()" class="btn btn-primary btn-lg" style="background-color: forestgreen; border-color: antiquewhite;">Cancel</span>
                <input type="submit" class="btn btn-primary btn-lg" style="background-color: forestgreen; border-color: antiquewhite;" value="Save Address" />
            </div>
        </div>
}

<script language="javascript">
    var $currForm = $('#AddressForm');
    $currForm.removeData("validator");
    $currForm.removeData("unobtrusiveValidation");
    $.validator.unobtrusive.parse($currForm);
    $currForm.validate();
</script>